C251 COMPILER V5.60.0,  ebf_control                                                        25/12/24  13:37:49  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE ebf_control
OBJECT MODULE PLACED IN .\Objects\ebf_control.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE usr\ebf_control.c XSMALL INTR2 BROWSE DEBUG PRINT(.\Listings\ebf_contr
                    -ol.lst) OBJECT(.\Objects\ebf_control.obj) 

stmt  level    source

    1          #include "ebf_control.h"
    2          
    3          
    4          u16 code Sound_Fre[4][7]=          //…˘“Ùø‚
    5          {                           
    6                  45627        ,40677        ,36253        ,34285        ,30534        ,27210        ,24242,//µÕ“Ù
    7                  22900        ,20408        ,18181        ,17167        ,15286        ,13620        ,12133,//÷–“Ù
    8                  11450        ,10204        ,9022         ,8583         ,7648         ,6814         ,6069,//∏ﬂ“Ù
    9                  5730         ,5106         ,4548         ,4293         ,3825         ,3408         ,3036,//≥¨∏ﬂ“Ù
   10          } ;        
   11          
   12          void    controlbeep(void)
   13          {
   14   1      
   15   1              if( (low_f==0) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==0) 
             -&& (one_f==0)) //diyin sol
   16   1                      {
   17   2                      PWM_config(Sound_Fre[0][4]);
   18   2                      printf("diyin sol\r\n");
   19   2                      }
   20   1              if( (low_f==0) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==0) 
             -&& (one_f==1)) //diyin la
   21   1                      {
   22   2                      PWM_config(Sound_Fre[0][5]);
   23   2                      printf("diyin 2\r\n");
   24   2                      }
   25   1              if( (low_f==0) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==1) 
             -&& (one_f==1)) //diyin si
   26   1                      {
   27   2                      PWM_config(Sound_Fre[0][6]);
   28   2                      printf("diyin 3\r\n");
   29   2                      }
   30   1              
   31   1              if( (low_f==1) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==1) && (two_f==1) 
             -&& (one_f==1)) //zhongyin do
   32   1                      {
   33   2                      PWM_config(Sound_Fre[1][0]);
   34   2                      printf("yin 1\r\n");
   35   2                      }
   36   1              if( (low_f==1) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==1) && (three_f==1) && (two_f==1) 
             -&& (one_f==1)) //zhongyin re
   37   1                      {
   38   2                      PWM_config(Sound_Fre[1][1]);
   39   2                      printf("yin 2\r\n");
   40   2                      }
   41   1              if( (low_f==1) && (high_f==1) && (six_f==0) && (five_f==1) && (four_f==1) && (three_f==1) && (two_f==1) 
             -&& (one_f==1)) //zhongyin mi
   42   1                      {
   43   2                      PWM_config(Sound_Fre[1][2]);  
   44   2                      printf("yin 3\r\n");
   45   2                      }
   46   1              if( (low_f==1) && (high_f==1) && (six_f==1) && (five_f==0) && (four_f==0) && (three_f==1) && (two_f==1) 
             -&& (one_f==1))//zhongyin fa
   47   1                      {
   48   2                      PWM_config(Sound_Fre[1][3]);  
   49   2                      printf("yin 4\r\n");
   50   2                      }
   51   1              if( (low_f==1) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==0) 
C251 COMPILER V5.60.0,  ebf_control                                                        25/12/24  13:37:49  PAGE 2   

             -&& (one_f==0)) //zhongyin sol
   52   1                      {
   53   2                      PWM_config(Sound_Fre[1][4]);
   54   2                      printf("yin 5\r\n");
   55   2                      }
   56   1              if( (low_f==1) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==0) 
             -&& (one_f==1))//zhongyin la
   57   1                      {
   58   2                      PWM_config(Sound_Fre[1][5]);
   59   2                      printf("yin 6\r\n");
   60   2                      }
   61   1              if( (low_f==1) && (high_f==1) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==1) 
             -&& (one_f==1)) //zhongyin si
   62   1                      {
   63   2                      PWM_config(Sound_Fre[1][6]);
   64   2                      printf("yin 7\r\n");
   65   2                      }
   66   1              
   67   1              if( (low_f==1) && (high_f==0) && (six_f==0) && (five_f==0) && (four_f==0) && (three_f==1) && (two_f==1) 
             -&& (one_f==1)) //gaoyiin do
   68   1                      {
   69   2                      PWM_config(Sound_Fre[2][0]);
   70   2                      printf("gaoyin 1\r\n");
   71   2                      }
   72   1              if( (low_f==1) && (high_f==0) && (six_f==0) && (five_f==0) && (four_f==1) && (three_f==1) && (two_f==1) 
             -&& (one_f==1)) //gaoyiin re
   73   1                      {
   74   2                      PWM_config(Sound_Fre[2][1]);
   75   2                      printf("gaoyin 2\r\n");
   76   2                      }
   77   1              if( (low_f==1) && (high_f==0) && (six_f==0) && (five_f==1) && (four_f==1) && (three_f==1) && (two_f==1) 
             -&& (one_f==1)) //gaoyiin mi
   78   1                      {
   79   2                      PWM_config(Sound_Fre[2][2]);  
   80   2                      printf("gaoyin 3\r\n");
   81   2                      }
   82   1              if( (low_f==1) && (high_f==0) && (six_f==1) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==0) 
             -&& (one_f==1))//gaoyiin fa
   83   1                      {
   84   2                      PWM_config(Sound_Fre[2][3]);  
   85   2                      printf("gaoyin 4\r\n");
   86   2                      }
   87   1              if( (low_f==1) && (high_f==0) && (six_f==1) && (five_f==0) && (four_f==0) && (three_f==0) && (two_f==0) 
             -&& (one_f==0)) //gaoyiin sol
   88   1                      {
   89   2                      PWM_config(Sound_Fre[2][4]);
   90   2                      printf("gaoyin 5\r\n");
   91   2                      }
   92   1              if( (low_f==1) && (high_f==0) && (six_f==0) && (five_f==0) && (four_f==1) && (three_f==0) && (two_f==0) 
             -&& (one_f==1)) //gaoyiin la
   93   1                      {
   94   2                      PWM_config(Sound_Fre[2][5]);
   95   2                      printf("gaoyin 6\r\n");
   96   2                      }
   97   1              if( (low_f==1) && (high_f==0) && (six_f==0) && (five_f==1) && (four_f==0) && (three_f==0) && (two_f==1) 
             -&& (one_f==0)) //gaoyiin si
   98   1                      {
   99   2                      PWM_config(Sound_Fre[2][6]);
  100   2                      printf("gaoyin 7\r\n");
  101   2                      }
  102   1                      
  103   1              if( (low_f==1) && (high_f==1) && (six_f==1) && (five_f==1) && (four_f==1) && (three_f==1) && (two_f==1) 
             -&& (one_f==1)) //zhongyin re
  104   1                      {
  105   2                      PWM_config(0);
  106   2                      printf("turn off\r\n");
C251 COMPILER V5.60.0,  ebf_control                                                        25/12/24  13:37:49  PAGE 3   

  107   2                      }
  108   1      //              printf("low_f:%hd\r\n",low_f);
  109   1      //              printf("high_f:%hd\r\n",high_f);
  110   1      //              printf("six_f:%hd\r\n",six_f);
  111   1      //              printf("five_f:%hd\r\n",five_f);
  112   1      //              printf("four_f:%hd\r\n",four_f);
  113   1      //              printf("three_f:%hd\r\n",three_f);
  114   1      //              printf("two_f:%hd\r\n",two_f);
  115   1      //              printf("one_f:%hd\r\n",one_f);
  116   1                      
  117   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =      1435     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =       176     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
